# - Try to find YODA
# Defines:
#
#  YODA_FOUND
#  YODA_INCLUDE_DIR
#  YODA_INCLUDE_DIRS (not cached)
#  YODA_LIBRARY
#  YODA_LIBRARIES (not cached)
#  YODA_LIBRARY_DIRS (not cached)

if (YODA_ROOT_DIR OR YODA_DIR OR (DEFINED ENV{YODA_ROOT_DIR}) OR (DEFINED ENV{YODA_DIR}) )
  set(YODA_SEARCH_DIRS "" CACHE STRING "" FORCE)
  if (YODA_ROOT_DIR)
    list (APPEND YODA_SEARCH_DIRS "${YODA_ROOT_DIR}" )
  endif()
  if (YODA_DIR)
    list (APPEND YODA_SEARCH_DIRS "${YODA_DIR}" )
  endif()
  if (DEFINED EVN{YODA_ROOT_DIR})
    list (APPEND YODA_SEARCH_DIRS "$ENV{YODA_ROOT_DIR}" )
  endif()
  if (DEFINED ENV{YODA_DIR})
    list (APPEND YODA_SEARCH_DIRS "$ENV{YODA_DIR}" )
  endif()
endif()

if (YODA_SEARCH_DIRS)
  find_program(YODA_CONFIG_EXE NAMES yoda-config PATHS ${YODA_SEARCH_DIRS} PATH_SUFFIXES bin NO_DEFAULT_PATH)
  find_path(YODA_INCLUDE_DIR YODA/YODA.h PATHS ${YODA_SEARCH_DIRS} PATH_SUFFIXES include NO_DEFAULT_PATH)
  find_library(YODA_LIBRARY NAMES YODA PATHS ${YODA_SEARCH_DIRS}  PATH_SUFFIXES lib lib64 NO_DEFAULT_PATH)
else()
  find_program(YODA_CONFIG_EXE NAMES yoda-config)
  find_path(YODA_INCLUDE_DIR YODA/YODA.h PATH_SUFFIXES include ../include)
  find_library(YODA_LIBRARY NAMES YODA PATH_SUFFIXES lib lib64 ../lib ../lib64)
endif()
set(YODA_VERSION 0.0.0)
if (YODA_INCLUDE_DIR)
  if (EXISTS ${YODA_INCLUDE_DIR}/YODA/Config/YodaConfig.h)
    file(STRINGS ${YODA_INCLUDE_DIR}/YODA/Config/YodaConfig.h YODA_VERSION_STRING_CONTENT REGEX "^#define[ ]+YODA_VERSION[ ]+\"" )
    if (YODA_VERSION_STRING_CONTENT)
      string(REGEX MATCH "[1234567890.]+[a-zA-Z]*" YODA_VERSION ${YODA_VERSION_STRING_CONTENT})
    endif()
  endif()
endif()
set(YODA_CONFIG_PYTHONPATH_STRING)
if (YODA_CONFIG_EXE)
  execute_process(COMMAND ${YODA_CONFIG_EXE} --pythonpath
                  OUTPUT_VARIABLE YODA_CONFIG_PYTHONPATH_STRING
                  OUTPUT_STRIP_TRAILING_WHITESPACE)
endif()

mark_as_advanced(YODA_INCLUDE_DIR YODA_LIBRARY YODA_CONFIG_PYTHONPATH_STRING YODA_VERSION)
include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(YODA HANDLE_COMPONENTS REQUIRED_VARS YODA_INCLUDE_DIR YODA_LIBRARY YODA_VERSION
                               YODA_CONFIG_PYTHONPATH_STRING
                               VERSION_VAR YODA_VERSION
                               )

set(YODA_LIBRARIES ${YODA_LIBRARY})
get_filename_component(YODA_LIBRARY_DIRS ${YODA_LIBRARY} PATH)

set(YODA_INCLUDE_DIRS ${YODA_INCLUDE_DIR})

mark_as_advanced(YODA_FOUND)
